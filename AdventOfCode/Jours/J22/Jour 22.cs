using System.Runtime.CompilerServices;

namespace AdventOfCode.Jours
{
    public class Jour_22 : Jour_abs
    {
        #region Enumerables
        #endregion

        #region Helpers
        #endregion

        #region Propriétés
        private Bricks _bricks { get; set; }
        #endregion

        #region Constructeur
        public Jour_22(bool debug = false):base(debug)
        {
            #region Input Data
            string InputData = "4,6,74~4,6,76\r\n0,3,277~0,4,277\r\n7,4,124~7,6,124\r\n5,1,268~5,1,269\r\n6,8,273~6,8,274\r\n8,0,268~8,0,270\r\n5,5,84~5,7,84\r\n1,9,196~3,9,196\r\n7,3,214~9,3,214\r\n6,2,171~8,2,171\r\n6,4,122~7,4,122\r\n1,2,177~1,5,177\r\n5,1,31~5,2,31\r\n1,3,196~1,6,196\r\n0,7,93~0,8,93\r\n0,5,267~0,6,267\r\n7,2,256~9,2,256\r\n3,8,40~4,8,40\r\n3,7,289~6,7,289\r\n7,5,269~7,7,269\r\n8,1,191~8,3,191\r\n3,0,190~5,0,190\r\n4,8,278~6,8,278\r\n8,6,25~8,9,25\r\n1,1,109~1,4,109\r\n4,6,270~4,7,270\r\n7,3,302~7,3,304\r\n6,0,108~8,0,108\r\n8,1,87~8,1,88\r\n6,6,94~6,8,94\r\n4,6,137~7,6,137\r\n3,4,20~3,7,20\r\n6,8,206~9,8,206\r\n6,9,266~8,9,266\r\n3,0,9~3,1,9\r\n9,0,82~9,3,82\r\n0,5,210~0,5,213\r\n5,5,303~7,5,303\r\n5,9,202~7,9,202\r\n8,3,256~8,6,256\r\n4,1,273~4,4,273\r\n6,6,1~6,7,1\r\n4,5,42~4,7,42\r\n5,6,183~7,6,183\r\n4,0,261~4,2,261\r\n3,3,271~5,3,271\r\n6,1,76~7,1,76\r\n5,2,59~7,2,59\r\n6,5,203~8,5,203\r\n4,6,278~6,6,278\r\n1,8,271~4,8,271\r\n6,4,279~7,4,279\r\n2,6,78~5,6,78\r\n9,7,112~9,9,112\r\n9,7,110~9,8,110\r\n6,2,208~9,2,208\r\n4,3,89~4,6,89\r\n2,7,93~2,9,93\r\n1,3,259~1,3,261\r\n5,3,45~7,3,45\r\n0,6,41~2,6,41\r\n3,8,42~5,8,42\r\n1,0,179~1,2,179\r\n1,1,283~3,1,283\r\n1,3,178~3,3,178\r\n3,5,182~3,7,182\r\n6,6,111~6,8,111\r\n1,0,106~1,2,106\r\n7,2,299~7,4,299\r\n8,7,88~8,9,88\r\n2,5,184~5,5,184\r\n1,0,2~2,0,2\r\n4,4,165~4,4,167\r\n1,9,116~2,9,116\r\n3,4,195~4,4,195\r\n8,5,150~8,7,150\r\n9,7,90~9,9,90\r\n1,7,31~1,9,31\r\n4,2,63~4,5,63\r\n5,0,271~5,0,274\r\n3,2,158~3,3,158\r\n4,4,150~4,5,150\r\n2,1,188~5,1,188\r\n2,2,35~2,4,35\r\n1,0,219~1,2,219\r\n1,6,98~3,6,98\r\n5,4,213~5,5,213\r\n7,1,120~7,3,120\r\n4,0,222~6,0,222\r\n7,2,112~9,2,112\r\n1,2,200~4,2,200\r\n2,3,165~2,4,165\r\n1,3,112~2,3,112\r\n0,3,189~2,3,189\r\n6,5,103~8,5,103\r\n2,6,176~3,6,176\r\n0,6,32~2,6,32\r\n2,2,297~2,4,297\r\n6,3,73~7,3,73\r\n8,4,231~8,6,231\r\n5,2,57~7,2,57\r\n8,6,180~8,9,180\r\n6,9,282~7,9,282\r\n0,0,65~0,2,65\r\n2,7,276~2,8,276\r\n1,8,191~2,8,191\r\n4,0,187~4,2,187\r\n5,6,214~8,6,214\r\n8,7,267~8,8,267\r\n2,1,246~4,1,246\r\n7,6,40~7,8,40\r\n6,2,248~6,4,248\r\n3,6,23~4,6,23\r\n9,6,181~9,8,181\r\n0,7,112~2,7,112\r\n3,4,147~4,4,147\r\n1,0,89~3,0,89\r\n5,2,172~7,2,172\r\n6,6,110~8,6,110\r\n6,5,133~6,7,133\r\n3,3,84~5,3,84\r\n9,4,128~9,6,128\r\n6,6,206~6,7,206\r\n7,2,131~7,3,131\r\n7,8,267~7,9,267\r\n7,1,12~7,3,12\r\n0,6,102~0,9,102\r\n2,8,96~4,8,96\r\n3,9,75~3,9,77\r\n3,0,70~3,3,70\r\n8,5,107~8,7,107\r\n4,7,173~5,7,173\r\n5,7,136~7,7,136\r\n1,1,57~2,1,57\r\n8,9,216~8,9,219\r\n3,4,267~3,6,267\r\n4,6,185~5,6,185\r\n2,2,16~2,5,16\r\n6,4,289~6,6,289\r\n1,5,255~3,5,255\r\n0,7,189~2,7,189\r\n7,4,234~7,7,234\r\n0,7,5~0,9,5\r\n0,5,214~0,5,217\r\n5,3,61~5,5,61\r\n1,9,193~3,9,193\r\n3,2,262~6,2,262\r\n5,4,291~5,5,291\r\n4,8,17~7,8,17\r\n9,6,45~9,7,45\r\n1,5,279~3,5,279\r\n0,1,7~0,2,7\r\n6,4,208~9,4,208\r\n0,3,49~0,6,49\r\n3,6,58~3,6,60\r\n6,1,55~8,1,55\r\n3,6,25~4,6,25\r\n3,6,57~5,6,57\r\n0,1,188~0,4,188\r\n0,0,262~0,1,262\r\n7,9,214~9,9,214\r\n9,6,70~9,7,70\r\n3,4,131~5,4,131\r\n5,7,224~5,9,224\r\n1,9,33~3,9,33\r\n5,1,185~5,4,185\r\n9,2,191~9,4,191\r\n2,5,201~5,5,201\r\n2,6,61~4,6,61\r\n8,7,215~9,7,215\r\n9,0,217~9,1,217\r\n3,2,56~3,4,56\r\n0,1,215~0,3,215\r\n1,4,45~1,6,45\r\n2,0,32~4,0,32\r\n5,9,173~7,9,173\r\n8,1,168~8,3,168\r\n5,5,167~6,5,167\r\n1,6,35~4,6,35\r\n2,6,54~4,6,54\r\n9,4,254~9,7,254\r\n7,0,80~8,0,80\r\n0,1,57~0,2,57\r\n5,9,276~5,9,278\r\n3,0,193~5,0,193\r\n0,6,202~3,6,202\r\n5,6,288~7,6,288\r\n0,7,218~0,7,219\r\n3,1,115~6,1,115\r\n0,3,276~2,3,276\r\n6,6,227~6,8,227\r\n8,4,224~8,7,224\r\n5,3,161~5,5,161\r\n4,3,26~6,3,26\r\n7,5,315~9,5,315\r\n6,6,41~9,6,41\r\n6,2,54~6,4,54\r\n6,9,279~7,9,279\r\n2,2,270~2,4,270\r\n3,7,84~3,8,84\r\n0,6,266~1,6,266\r\n2,4,164~4,4,164\r\n7,5,212~7,7,212\r\n6,2,75~6,2,76\r\n1,7,284~2,7,284\r\n6,7,300~7,7,300\r\n8,3,258~8,5,258\r\n7,8,205~9,8,205\r\n5,4,251~5,5,251\r\n1,2,205~1,4,205\r\n6,0,137~6,1,137\r\n1,7,102~2,7,102\r\n5,5,202~5,7,202\r\n7,7,179~7,9,179\r\n4,5,174~4,7,174\r\n7,6,13~7,8,13\r\n4,6,212~4,8,212\r\n0,7,222~0,8,222\r\n6,7,21~8,7,21\r\n7,5,17~9,5,17\r\n4,0,29~4,2,29\r\n1,7,253~1,7,254\r\n2,6,169~2,6,171\r\n1,5,164~4,5,164\r\n3,2,247~6,2,247\r\n3,3,295~3,3,296\r\n8,2,15~9,2,15\r\n2,4,34~2,6,34\r\n7,2,128~7,5,128\r\n0,4,189~3,4,189\r\n0,2,56~0,5,56\r\n1,7,114~1,9,114\r\n1,4,102~3,4,102\r\n3,2,272~3,4,272\r\n6,5,294~7,5,294\r\n2,3,81~4,3,81\r\n9,2,253~9,3,253\r\n5,2,43~5,4,43\r\n7,2,301~7,3,301\r\n6,5,320~8,5,320\r\n3,7,22~3,9,22\r\n2,8,35~5,8,35\r\n8,5,295~9,5,295\r\n6,9,68~7,9,68\r\n6,1,234~6,3,234\r\n5,8,67~7,8,67\r\n5,0,243~7,0,243\r\n5,0,118~5,2,118\r\n3,6,9~5,6,9\r\n4,3,275~4,6,275\r\n3,2,127~4,2,127\r\n6,6,247~6,8,247\r\n3,4,124~6,4,124\r\n4,3,274~5,3,274\r\n1,3,91~1,5,91\r\n4,6,64~4,8,64\r\n0,5,270~0,8,270\r\n4,4,103~6,4,103\r\n5,5,249~7,5,249\r\n2,0,52~5,0,52\r\n4,2,189~4,5,189\r\n8,1,241~8,2,241\r\n1,3,294~3,3,294\r\n8,0,1~8,0,2\r\n6,5,165~6,9,165\r\n3,5,41~3,7,41\r\n3,3,254~3,5,254\r\n2,6,105~2,7,105\r\n3,3,106~4,3,106\r\n7,9,268~9,9,268\r\n2,5,81~2,8,81\r\n0,6,199~0,8,199\r\n3,1,212~3,4,212\r\n5,5,63~5,6,63\r\n5,2,49~6,2,49\r\n6,8,39~6,9,39\r\n8,9,7~8,9,9\r\n7,7,24~7,9,24\r\n5,8,47~8,8,47\r\n5,5,187~5,5,189\r\n8,6,273~8,9,273\r\n8,9,185~9,9,185\r\n4,6,171~4,8,171\r\n2,7,191~4,7,191\r\n2,0,168~2,3,168\r\n5,1,68~5,3,68\r\n7,6,91~7,9,91\r\n8,1,13~8,3,13\r\n6,2,202~6,3,202\r\n6,0,200~6,1,200\r\n4,3,252~4,4,252\r\n5,0,93~5,2,93\r\n7,6,237~7,8,237\r\n0,8,33~2,8,33\r\n0,0,86~0,2,86\r\n8,6,226~8,6,229\r\n0,4,1~2,4,1\r\n2,0,122~2,3,122\r\n5,3,69~8,3,69\r\n2,8,46~4,8,46\r\n6,5,66~9,5,66\r\n7,6,294~9,6,294\r\n8,6,113~8,8,113\r\n5,1,163~5,4,163\r\n1,6,269~4,6,269\r\n8,6,207~8,7,207\r\n7,4,213~9,4,213\r\n2,6,22~2,8,22\r\n0,5,83~0,8,83\r\n0,2,210~0,4,210\r\n6,6,167~6,8,167\r\n5,4,171~7,4,171\r\n0,0,281~4,0,281\r\n5,0,270~5,2,270\r\n6,2,118~9,2,118\r\n5,0,53~6,0,53\r\n4,2,13~4,4,13\r\n2,6,52~5,6,52\r\n1,5,203~4,5,203\r\n7,5,14~7,7,14\r\n7,2,258~7,2,260\r\n6,2,193~6,3,193\r\n7,9,180~7,9,181\r\n6,3,307~6,5,307\r\n8,4,281~8,6,281\r\n4,2,107~7,2,107\r\n6,6,205~8,6,205\r\n6,7,51~6,8,51\r\n8,5,5~8,8,5\r\n9,6,295~9,7,295\r\n8,2,85~8,4,85\r\n0,2,268~0,5,268\r\n3,3,173~5,3,173\r\n8,3,285~8,5,285\r\n5,9,175~7,9,175\r\n3,7,194~5,7,194\r\n9,3,256~9,5,256\r\n9,1,80~9,4,80\r\n6,1,100~6,3,100\r\n6,6,88~8,6,88\r\n2,7,15~5,7,15\r\n2,2,180~2,5,180\r\n0,8,70~0,9,70\r\n0,2,221~0,3,221\r\n7,7,16~9,7,16\r\n3,1,101~5,1,101\r\n8,8,29~9,8,29\r\n3,0,80~5,0,80\r\n2,3,291~4,3,291\r\n4,6,243~7,6,243\r\n1,0,118~4,0,118\r\n4,2,78~4,5,78\r\n5,9,67~7,9,67\r\n1,8,192~4,8,192\r\n5,3,259~5,5,259\r\n6,4,5~8,4,5\r\n5,4,132~5,5,132\r\n0,7,85~0,9,85\r\n1,9,201~4,9,201\r\n8,6,24~8,7,24\r\n2,1,249~3,1,249\r\n0,5,209~0,8,209\r\n7,4,317~7,6,317\r\n0,5,37~2,5,37\r\n3,5,185~5,5,185\r\n7,5,292~7,7,292\r\n6,2,266~6,3,266\r\n1,3,42~1,3,44\r\n4,6,245~4,8,245\r\n1,3,45~2,3,45\r\n7,5,167~7,6,167\r\n4,8,3~4,8,3\r\n5,4,205~7,4,205\r\n4,5,308~7,5,308\r\n2,0,77~5,0,77\r\n5,1,47~5,3,47\r\n9,2,193~9,4,193\r\n1,9,194~4,9,194\r\n4,7,12~4,9,12\r\n3,2,211~3,5,211\r\n4,7,182~6,7,182\r\n7,1,14~9,1,14\r\n0,6,99~0,7,99\r\n8,0,273~8,1,273\r\n2,4,268~4,4,268\r\n5,2,28~5,2,28\r\n6,9,19~8,9,19\r\n1,3,55~1,5,55\r\n6,1,245~6,4,245\r\n4,8,214~4,8,216\r\n3,2,188~3,2,190\r\n5,9,17~7,9,17\r\n1,8,284~1,9,284\r\n9,7,269~9,9,269\r\n4,7,200~4,9,200\r\n0,4,184~0,7,184\r\n5,2,50~5,4,50\r\n9,6,108~9,9,108\r\n4,0,277~4,1,277\r\n6,6,220~6,8,220\r\n6,3,251~6,5,251\r\n1,0,240~1,4,240\r\n0,0,199~0,4,199\r\n4,1,139~5,1,139\r\n2,4,291~4,4,291\r\n2,4,294~2,6,294\r\n5,6,73~8,6,73\r\n0,6,62~0,8,62\r\n5,6,167~5,8,167\r\n5,5,135~5,5,138\r\n0,8,282~0,9,282\r\n7,4,274~7,6,274\r\n7,2,185~9,2,185\r\n4,3,269~5,3,269\r\n6,4,262~6,4,265\r\n0,9,104~0,9,106\r\n3,5,128~3,5,129\r\n5,5,205~8,5,205\r\n8,3,147~8,5,147\r\n2,5,168~2,6,168\r\n6,4,126~6,4,128\r\n4,0,311~8,0,311\r\n6,0,211~6,3,211\r\n6,1,185~6,2,185\r\n6,3,290~7,3,290\r\n6,9,233~6,9,234\r\n5,1,244~5,1,247\r\n4,2,249~4,3,249\r\n0,0,123~2,0,123\r\n1,2,182~1,3,182\r\n7,0,140~7,2,140\r\n8,8,85~8,9,85\r\n6,0,14~6,3,14\r\n0,4,181~0,7,181\r\n1,4,197~1,7,197\r\n3,0,76~3,2,76\r\n7,5,131~8,5,131\r\n7,4,77~7,7,77\r\n0,7,283~1,7,283\r\n5,0,205~8,0,205\r\n3,6,155~3,8,155\r\n8,6,68~8,6,70\r\n6,0,254~7,0,254\r\n7,3,126~9,3,126\r\n1,7,94~4,7,94\r\n8,3,11~8,6,11\r\n5,6,45~5,8,45\r\n8,4,86~8,7,86\r\n7,8,292~9,8,292\r\n2,9,227~5,9,227\r\n1,7,108~4,7,108\r\n7,0,253~7,2,253\r\n2,4,167~2,7,167\r\n3,6,135~6,6,135\r\n3,7,287~6,7,287\r\n4,2,291~5,2,291\r\n5,5,269~6,5,269\r\n7,2,141~7,4,141\r\n4,9,21~6,9,21\r\n1,5,22~1,5,25\r\n3,8,296~3,8,298\r\n1,7,111~1,8,111\r\n0,9,217~1,9,217\r\n7,4,79~9,4,79\r\n0,6,207~0,8,207\r\n3,4,209~3,5,209\r\n3,4,152~3,6,152\r\n2,5,20~2,7,20\r\n7,0,187~7,3,187\r\n5,4,129~5,6,129\r\n8,1,254~8,1,257\r\n2,0,106~3,0,106\r\n6,5,248~8,5,248\r\n5,8,92~7,8,92\r\n9,6,274~9,8,274\r\n6,2,121~6,4,121\r\n4,0,112~4,2,112\r\n3,0,63~3,2,63\r\n1,5,239~1,6,239\r\n0,6,7~0,8,7\r\n6,7,135~8,7,135\r\n6,7,67~9,7,67\r\n1,2,83~1,5,83\r\n6,7,240~7,7,240\r\n7,5,8~9,5,8\r\n4,1,23~4,4,23\r\n3,2,277~3,2,279\r\n4,0,219~4,2,219\r\n4,1,237~6,1,237\r\n1,6,280~1,7,280\r\n2,4,197~2,5,197\r\n6,9,237~9,9,237\r\n7,8,70~8,8,70\r\n0,4,180~1,4,180\r\n4,6,180~5,6,180\r\n0,5,259~4,5,259\r\n5,2,236~7,2,236\r\n7,9,98~8,9,98\r\n0,8,88~1,8,88\r\n1,0,80~2,0,80\r\n9,2,129~9,3,129\r\n6,5,282~8,5,282\r\n9,5,282~9,5,285\r\n6,6,223~8,6,223\r\n6,6,268~6,8,268\r\n7,9,65~9,9,65\r\n6,0,150~6,0,152\r\n5,3,231~6,3,231\r\n2,1,99~4,1,99\r\n7,0,298~7,3,298\r\n2,8,198~2,8,199\r\n5,1,95~5,3,95\r\n8,4,13~8,4,15\r\n2,0,195~3,0,195\r\n5,8,2~8,8,2\r\n7,2,1~7,4,1\r\n1,6,101~3,6,101\r\n9,3,235~9,5,235\r\n9,5,105~9,8,105\r\n1,5,126~3,5,126\r\n4,7,279~7,7,279\r\n6,2,252~6,3,252\r\n7,4,32~7,6,32\r\n2,8,114~4,8,114\r\n4,2,309~4,4,309\r\n8,2,50~8,2,50\r\n0,0,64~3,0,64\r\n2,0,213~2,1,213\r\n7,5,79~7,7,79\r\n9,3,9~9,3,12\r\n9,6,42~9,7,42\r\n0,3,82~2,3,82\r\n7,5,313~7,6,313\r\n4,3,60~4,5,60\r\n0,8,203~2,8,203\r\n6,1,1~8,1,1\r\n6,1,52~8,1,52\r\n3,2,87~3,5,87\r\n6,7,282~8,7,282\r\n1,2,88~3,2,88\r\n3,7,264~3,8,264\r\n1,0,217~1,2,217\r\n5,7,284~7,7,284\r\n7,2,269~7,2,271\r\n7,4,278~9,4,278\r\n0,9,2~2,9,2\r\n2,2,272~2,4,272\r\n2,2,260~5,2,260\r\n1,6,278~1,8,278\r\n1,3,48~1,4,48\r\n2,2,52~4,2,52\r\n5,6,300~6,6,300\r\n6,7,33~8,7,33\r\n2,5,75~4,5,75\r\n1,8,277~1,9,277\r\n1,5,270~1,6,270\r\n7,3,60~7,4,60\r\n7,8,203~7,9,203\r\n5,7,208~5,9,208\r\n3,1,240~4,1,240\r\n4,7,86~4,7,90\r\n8,2,49~8,4,49\r\n9,3,127~9,4,127\r\n1,0,216~4,0,216\r\n5,1,311~7,1,311\r\n4,1,243~6,1,243\r\n9,2,55~9,4,55\r\n5,0,143~8,0,143\r\n0,3,212~0,4,212\r\n5,6,239~5,6,241\r\n0,4,135~2,4,135\r\n1,7,251~3,7,251\r\n0,0,218~0,2,218\r\n5,8,271~6,8,271\r\n1,5,199~3,5,199\r\n9,1,195~9,2,195\r\n3,0,11~3,0,13\r\n2,3,171~4,3,171\r\n2,7,5~4,7,5\r\n7,7,289~7,8,289\r\n6,6,235~6,7,235\r\n6,4,57~9,4,57\r\n2,3,124~2,5,124\r\n0,7,100~3,7,100\r\n2,9,34~5,9,34\r\n5,2,256~5,2,258\r\n0,6,203~3,6,203\r\n5,1,208~5,4,208\r\n0,3,271~0,4,271\r\n6,0,310~6,3,310\r\n2,2,109~4,2,109\r\n3,4,192~3,4,192\r\n9,0,215~9,2,215\r\n4,0,136~4,3,136\r\n4,4,41~6,4,41\r\n4,7,83~7,7,83\r\n2,3,22~4,3,22\r\n5,7,175~7,7,175\r\n6,6,170~6,9,170\r\n3,5,46~3,7,46\r\n7,4,48~7,6,48\r\n9,0,286~9,1,286\r\n2,2,278~2,2,280\r\n4,2,125~4,4,125\r\n5,3,301~5,6,301\r\n0,8,67~2,8,67\r\n3,1,72~3,1,74\r\n0,3,174~2,3,174\r\n8,0,146~9,0,146\r\n7,0,189~7,2,189\r\n5,2,209~7,2,209\r\n6,6,84~6,8,84\r\n2,6,190~2,9,190\r\n4,7,99~4,9,99\r\n1,7,43~3,7,43\r\n8,5,267~8,6,267\r\n5,7,281~8,7,281\r\n5,0,210~5,2,210\r\n3,9,268~3,9,270\r\n8,5,134~8,5,136\r\n6,1,214~8,1,214\r\n8,1,70~8,3,70\r\n2,1,21~2,4,21\r\n8,8,4~8,9,4\r\n8,5,249~9,5,249\r\n3,0,208~3,2,208\r\n4,7,41~4,9,41\r\n5,3,97~6,3,97\r\n8,3,312~8,5,312\r\n2,0,33~2,0,36\r\n7,3,192~7,4,192\r\n5,5,66~5,5,67\r\n9,1,211~9,2,211\r\n5,4,294~5,4,296\r\n9,3,279~9,5,279\r\n8,3,82~8,5,82\r\n5,3,65~5,5,65\r\n4,4,11~4,6,11\r\n0,1,66~2,1,66\r\n4,6,186~4,6,186\r\n2,2,183~2,2,185\r\n4,5,294~5,5,294\r\n4,0,105~7,0,105\r\n4,0,270~4,1,270\r\n6,5,77~6,8,77\r\n8,6,264~8,7,264\r\n1,0,115~4,0,115\r\n7,2,194~7,2,196\r\n3,5,77~3,5,77\r\n4,9,265~6,9,265\r\n5,7,263~5,9,263\r\n6,1,216~6,4,216\r\n6,8,49~8,8,49\r\n6,5,297~6,7,297\r\n6,7,178~9,7,178\r\n1,4,26~1,6,26\r\n5,6,60~8,6,60\r\n5,2,103~6,2,103\r\n5,6,170~5,6,173\r\n8,4,270~8,6,270\r\n4,2,26~7,2,26\r\n4,7,167~4,7,169\r\n4,5,59~5,5,59\r\n6,4,45~9,4,45\r\n6,0,51~6,2,51\r\n0,7,89~3,7,89\r\n3,3,28~3,4,28\r\n0,0,128~0,0,128\r\n1,6,231~4,6,231\r\n6,3,284~9,3,284\r\n6,4,202~6,6,202\r\n7,5,113~7,6,113\r\n0,4,54~1,4,54\r\n1,0,228~2,0,228\r\n2,4,156~4,4,156\r\n6,2,2~6,4,2\r\n8,4,141~8,5,141\r\n2,8,86~4,8,86\r\n0,7,9~0,9,9\r\n6,2,223~8,2,223\r\n3,5,253~5,5,253\r\n1,4,235~3,4,235\r\n6,9,198~6,9,201\r\n1,6,241~3,6,241\r\n5,5,101~5,7,101\r\n2,8,14~6,8,14\r\n4,3,124~6,3,124\r\n7,4,144~7,4,147\r\n8,6,138~8,8,138\r\n1,2,210~1,4,210\r\n6,3,190~8,3,190\r\n3,6,92~3,7,92\r\n1,3,93~2,3,93\r\n5,9,230~7,9,230\r\n2,7,42~3,7,42\r\n4,9,230~4,9,231\r\n5,8,274~5,9,274\r\n6,5,179~6,7,179\r\n0,8,281~2,8,281\r\n1,4,199~1,4,199\r\n8,1,313~8,4,313\r\n0,0,1~0,2,1\r\n5,7,205~7,7,205\r\n1,7,198~1,7,201\r\n4,3,260~4,5,260\r\n2,6,111~2,8,111\r\n3,6,291~5,6,291\r\n4,1,89~4,2,89\r\n3,1,86~3,3,86\r\n0,5,57~0,8,57\r\n3,1,62~4,1,62\r\n9,1,5~9,3,5\r\n8,4,47~8,6,47\r\n4,7,206~5,7,206\r\n5,6,236~5,8,236\r\n0,5,186~0,7,186\r\n7,2,193~8,2,193\r\n7,5,286~7,7,286\r\n4,5,58~4,6,58\r\n3,5,22~4,5,22\r\n0,3,36~2,3,36\r\n0,0,125~1,0,125\r\n5,1,70~5,2,70\r\n3,2,54~3,5,54\r\n0,5,1~0,6,1\r\n7,2,227~7,4,227\r\n7,5,5~7,8,5\r\n2,0,226~3,0,226\r\n5,0,246~7,0,246\r\n3,1,43~3,2,43\r\n0,5,206~0,7,206\r\n2,0,225~2,2,225\r\n3,4,233~3,6,233\r\n4,4,36~4,7,36\r\n3,2,275~3,4,275\r\n9,1,63~9,4,63\r\n0,3,88~0,5,88\r\n3,1,225~3,3,225\r\n6,4,291~9,4,291\r\n6,5,226~6,7,226\r\n1,4,296~2,4,296\r\n3,1,96~6,1,96\r\n0,8,198~1,8,198\r\n1,8,230~1,9,230\r\n7,0,220~7,1,220\r\n4,4,304~5,4,304\r\n0,1,282~0,3,282\r\n3,3,149~3,4,149\r\n3,1,34~5,1,34\r\n4,1,207~4,3,207\r\n0,1,124~3,1,124\r\n0,3,208~1,3,208\r\n6,6,75~8,6,75\r\n7,6,62~7,9,62\r\n1,4,237~1,6,237\r\n6,2,239~8,2,239\r\n5,2,310~5,4,310\r\n7,2,114~7,3,114\r\n5,7,18~6,7,18\r\n7,5,250~7,8,250\r\n5,1,3~5,4,3\r\n3,3,155~6,3,155\r\n8,4,277~8,7,277\r\n4,3,132~4,3,134\r\n4,3,263~4,3,263\r\n2,1,315~5,1,315\r\n8,8,28~9,8,28\r\n3,9,100~5,9,100\r\n1,0,105~3,0,105\r\n7,7,64~7,8,64\r\n0,2,40~3,2,40\r\n0,0,104~2,0,104\r\n8,0,207~8,2,207\r\n4,1,133~6,1,133\r\n3,2,183~7,2,183\r\n3,7,2~3,7,2\r\n4,7,70~7,7,70\r\n7,6,252~8,6,252\r\n8,5,165~8,6,165\r\n1,9,236~3,9,236\r\n4,0,50~4,3,50\r\n9,3,215~9,4,215\r\n4,8,37~7,8,37\r\n8,1,10~8,2,10\r\n6,7,183~6,8,183\r\n2,2,114~5,2,114\r\n6,5,104~9,5,104\r\n5,4,51~5,6,51\r\n4,5,165~4,8,165\r\n6,1,264~6,3,264\r\n7,1,255~7,1,257\r\n9,0,7~9,4,7\r\n5,9,94~7,9,94\r\n4,3,262~7,3,262\r\n5,1,201~7,1,201\r\n4,8,238~5,8,238\r\n4,7,267~6,7,267\r\n4,1,55~4,3,55\r\n3,3,154~3,5,154\r\n9,6,213~9,9,213\r\n6,1,167~6,4,167\r\n8,6,209~8,8,209\r\n3,4,25~4,4,25\r\n5,2,225~8,2,225\r\n2,7,248~4,7,248\r\n4,4,72~4,6,72\r\n8,0,289~9,0,289\r\n0,3,257~3,3,257\r\n5,2,62~6,2,62\r\n9,4,86~9,4,88\r\n0,5,257~2,5,257\r\n5,5,211~6,5,211\r\n5,9,231~6,9,231\r\n0,9,213~0,9,216\r\n9,0,218~9,0,219\r\n0,6,52~0,8,52\r\n5,3,289~5,6,289\r\n1,6,43~3,6,43\r\n6,7,237~6,8,237\r\n8,7,80~8,9,80\r\n2,2,222~4,2,222\r\n4,6,7~4,8,7\r\n8,0,264~8,0,265\r\n2,0,101~2,2,101\r\n1,5,79~3,5,79\r\n5,5,262~6,5,262\r\n3,3,73~3,4,73\r\n8,6,63~8,8,63\r\n2,3,19~5,3,19\r\n4,3,286~6,3,286\r\n4,4,161~4,7,161\r\n2,6,225~6,6,225\r\n0,7,212~0,9,212\r\n4,9,197~6,9,197\r\n6,9,71~6,9,75\r\n6,4,52~6,6,52\r\n5,2,294~6,2,294\r\n5,3,165~5,5,165\r\n8,6,116~8,8,116\r\n5,2,253~5,4,253\r\n4,6,136~5,6,136\r\n6,0,203~6,3,203\r\n4,6,233~7,6,233\r\n9,1,212~9,2,212\r\n6,1,247~9,1,247\r\n7,7,277~7,9,277\r\n7,6,255~7,7,255\r\n1,4,179~3,4,179\r\n1,1,222~3,1,222\r\n0,0,201~0,2,201\r\n8,3,36~8,6,36\r\n0,7,272~0,9,272\r\n4,0,56~6,0,56\r\n4,5,45~4,6,45\r\n2,6,270~2,8,270\r\n3,5,43~5,5,43\r\n9,3,316~9,6,316\r\n5,6,164~5,9,164\r\n3,4,228~3,6,228\r\n8,9,239~9,9,239\r\n6,5,4~6,7,4\r\n1,2,135~1,2,136\r\n6,2,13~6,3,13\r\n1,1,60~1,1,61\r\n3,0,187~3,2,187\r\n4,1,8~7,1,8\r\n9,2,282~9,4,282\r\n1,7,17~4,7,17\r\n8,8,64~9,8,64\r\n9,6,272~9,8,272\r\n1,3,297~1,5,297\r\n1,1,6~5,1,6\r\n7,0,240~7,2,240\r\n4,0,33~6,0,33\r\n2,7,25~2,7,27\r\n8,4,9~8,6,9\r\n0,7,96~0,9,96\r\n6,5,209~9,5,209\r\n3,3,307~5,3,307\r\n3,7,211~5,7,211\r\n4,2,87~4,4,87\r\n5,2,73~5,2,73\r\n4,6,241~4,8,241\r\n5,6,270~6,6,270\r\n3,5,23~3,5,25\r\n6,1,299~6,4,299\r\n6,0,4~8,0,4\r\n2,1,204~5,1,204\r\n4,1,75~6,1,75\r\n5,2,165~8,2,165\r\n2,0,229~2,0,231\r\n4,2,307~5,2,307\r\n7,0,97~9,0,97\r\n8,4,16~8,4,18\r\n4,0,272~4,0,275\r\n2,1,223~2,3,223\r\n1,8,274~1,9,274\r\n5,0,130~5,2,130\r\n1,8,195~2,8,195\r\n9,1,9~9,2,9\r\n7,2,7~7,4,7\r\n5,2,250~8,2,250\r\n6,4,285~6,4,287\r\n1,0,170~4,0,170\r\n3,3,309~3,6,309\r\n2,6,264~4,6,264\r\n3,7,109~5,7,109\r\n0,7,98~2,7,98\r\n5,7,239~5,9,239\r\n0,8,115~2,8,115\r\n4,4,222~6,4,222\r\n6,7,110~8,7,110\r\n4,5,237~4,8,237\r\n3,2,180~3,4,180\r\n3,1,312~3,3,312\r\n9,5,183~9,7,183\r\n4,7,72~4,8,72\r\n9,5,258~9,5,260\r\n2,4,159~5,4,159\r\n6,1,72~6,4,72\r\n0,1,261~0,4,261\r\n0,1,175~0,3,175\r\n1,2,46~1,5,46\r\n2,1,224~2,3,224\r\n2,6,273~2,7,273\r\n4,0,186~4,3,186\r\n0,4,51~1,4,51\r\n6,1,312~7,1,312\r\n3,7,266~3,9,266\r\n0,6,80~2,6,80\r\n3,7,262~5,7,262\r\n7,3,288~8,3,288\r\n2,8,200~3,8,200\r\n1,6,29~1,8,29\r\n8,1,297~8,2,297\r\n4,8,217~6,8,217\r\n5,5,35~8,5,35\r\n3,5,234~3,7,234\r\n5,5,3~5,7,3\r\n4,5,16~6,5,16\r\n8,3,293~8,5,293\r\n9,0,188~9,2,188\r\n2,2,206~2,5,206\r\n1,6,47~3,6,47\r\n1,5,1~1,8,1\r\n7,6,138~7,9,138\r\n6,9,14~9,9,14\r\n7,1,139~7,3,139\r\n1,9,118~1,9,121\r\n2,8,82~4,8,82\r\n0,4,197~0,6,197\r\n4,1,142~4,4,142\r\n3,7,295~3,9,295\r\n6,3,230~9,3,230\r\n3,4,261~3,5,261\r\n2,6,214~4,6,214\r\n7,2,230~7,2,233\r\n7,2,211~7,4,211\r\n5,6,5~5,7,5\r\n5,5,164~8,5,164\r\n2,4,183~5,4,183\r\n7,8,82~9,8,82\r\n3,0,90~5,0,90\r\n4,1,293~4,3,293\r\n7,7,85~7,9,85\r\n6,1,220~6,4,220\r\n6,7,276~8,7,276\r\n8,1,243~8,5,243\r\n6,3,101~6,5,101\r\n0,7,217~0,8,217\r\n6,0,110~9,0,110\r\n9,7,89~9,9,89\r\n3,1,2~3,2,2\r\n6,5,304~8,5,304\r\n7,2,28~7,4,28\r\n2,5,14~4,5,14\r\n9,1,238~9,3,238\r\n7,2,61~9,2,61\r\n8,2,210~9,2,210\r\n2,4,100~5,4,100\r\n7,0,78~7,2,78\r\n0,9,10~0,9,13\r\n3,8,193~5,8,193\r\n7,0,219~8,0,219\r\n9,7,296~9,7,297\r\n1,7,101~4,7,101\r\n1,7,39~4,7,39\r\n8,2,1~8,2,3\r\n8,1,86~8,3,86\r\n8,2,262~8,2,264\r\n6,3,196~6,5,196\r\n2,1,282~3,1,282\r\n2,1,277~2,3,277\r\n0,7,90~3,7,90\r\n1,5,92~1,5,94\r\n2,6,62~5,6,62\r\n5,4,284~8,4,284\r\n4,6,177~4,7,177\r\n5,1,136~7,1,136\r\n3,3,187~4,3,187\r\n6,7,27~9,7,27\r\n2,5,83~2,6,83\r\n9,4,46~9,4,49\r\n3,3,179~4,3,179\r\n7,0,130~9,0,130\r\n1,2,139~1,4,139\r\n0,4,185~0,6,185\r\n3,6,74~3,9,74\r\n1,8,233~1,8,235\r\n5,4,256~5,6,256\r\n9,7,86~9,7,86\r\n1,3,81~1,5,81\r\n9,3,233~9,4,233\r\n3,9,296~6,9,296\r\n7,6,30~7,8,30\r\n3,0,267~5,0,267\r\n0,3,44~0,6,44\r\n0,6,193~3,6,193\r\n5,6,19~5,7,19\r\n0,2,91~0,4,91\r\n3,9,230~3,9,233\r\n6,1,79~7,1,79\r\n1,2,130~3,2,130\r\n6,2,169~6,4,169\r\n7,6,97~7,9,97\r\n7,2,266~7,3,266\r\n7,8,141~9,8,141\r\n1,3,88~1,7,88\r\n0,6,95~0,8,95\r\n7,9,100~7,9,101\r\n9,1,2~9,1,4\r\n6,5,267~7,5,267\r\n6,5,37~6,6,37\r\n8,0,261~8,3,261\r\n5,8,3~6,8,3\r\n0,6,174~2,6,174\r\n3,7,24~3,8,24\r\n4,8,223~6,8,223\r\n5,0,275~6,0,275\r\n6,4,44~7,4,44\r\n1,1,206~3,1,206\r\n5,2,21~5,3,21\r\n3,6,93~3,6,95\r\n0,6,38~4,6,38\r\n8,1,253~8,4,253\r\n9,4,133~9,6,133\r\n0,6,195~3,6,195\r\n6,8,168~8,8,168\r\n6,2,296~8,2,296\r\n4,6,131~7,6,131\r\n4,8,10~6,8,10\r\n3,3,189~3,3,191\r\n9,1,258~9,2,258\r\n3,0,197~3,0,200\r\n4,0,223~6,0,223\r\n3,2,197~3,4,197\r\n1,2,89~2,2,89\r\n3,8,272~4,8,272\r\n7,2,264~7,3,264\r\n0,1,4~3,1,4\r\n2,2,261~2,5,261\r\n8,1,5~8,3,5\r\n3,2,66~3,2,66\r\n4,2,289~4,4,289\r\n3,0,186~3,2,186\r\n2,6,215~2,8,215\r\n4,1,61~4,3,61\r\n7,3,123~9,3,123\r\n6,2,117~8,2,117\r\n9,3,251~9,6,251\r\n2,8,206~3,8,206\r\n8,4,306~8,7,306\r\n7,5,25~7,7,25\r\n9,1,84~9,4,84\r\n1,5,20~1,8,20\r\n7,0,50~7,4,50\r\n2,1,52~5,1,52\r\n7,7,47~9,7,47\r\n0,4,59~0,6,59\r\n7,7,42~8,7,42\r\n4,3,130~5,3,130\r\n2,5,196~2,6,196\r\n6,5,64~6,5,65\r\n0,1,279~2,1,279\r\n6,7,116~7,7,116\r\n0,6,64~1,6,64\r\n0,0,121~2,0,121\r\n3,8,65~4,8,65\r\n0,2,142~2,2,142\r\n3,9,13~6,9,13\r\n0,8,216~3,8,216\r\n7,5,208~9,5,208\r\n3,8,44~3,9,44\r\n4,6,69~4,7,69\r\n8,2,259~8,5,259\r\n0,2,260~0,6,260\r\n2,6,37~4,6,37\r\n8,4,65~8,6,65\r\n9,4,108~9,5,108\r\n7,6,93~8,6,93\r\n5,9,92~7,9,92\r\n6,5,62~6,6,62\r\n5,1,239~5,2,239\r\n4,8,81~4,9,81\r\n8,0,128~8,2,128\r\n4,3,107~4,3,109\r\n6,5,19~6,6,19\r\n4,7,67~4,8,67\r\n9,5,83~9,8,83\r\n7,4,193~7,4,196\r\n9,4,129~9,4,131\r\n1,3,203~4,3,203\r\n9,1,81~9,2,81\r\n9,5,1~9,5,3\r\n3,5,236~3,5,239\r\n3,6,261~3,8,261\r\n4,1,10~6,1,10\r\n5,1,266~5,3,266\r\n1,0,126~1,0,128\r\n4,6,80~4,9,80\r\n5,8,12~7,8,12\r\n0,6,263~1,6,263\r\n4,2,91~4,5,91\r\n7,8,210~9,8,210\r\n7,8,291~7,9,291\r\n9,2,130~9,3,130\r\n9,1,285~9,2,285\r\n2,1,54~2,4,54\r\n0,1,83~0,3,83\r\n5,5,110~8,5,110\r\n5,0,96~7,0,96\r\n8,1,246~9,1,246\r\n5,6,59~7,6,59\r\n6,8,275~6,8,275\r\n6,0,148~9,0,148\r\n2,6,258~5,6,258\r\n1,2,133~1,5,133\r\n0,6,271~0,8,271\r\n9,2,18~9,5,18\r\n9,5,185~9,6,185\r\n5,5,311~8,5,311\r\n9,7,271~9,9,271\r\n3,3,305~5,3,305\r\n4,5,266~6,5,266\r\n9,6,215~9,6,216\r\n4,2,65~4,3,65\r\n1,7,46~1,9,46\r\n2,0,43~2,2,43\r\n5,9,269~6,9,269\r\n3,7,292~5,7,292\r\n3,4,278~3,6,278\r\n2,4,208~4,4,208\r\n6,5,139~8,5,139\r\n5,2,304~5,3,304\r\n1,8,66~3,8,66\r\n6,6,245~8,6,245\r\n4,4,145~4,5,145\r\n7,8,88~7,9,88\r\n5,6,184~7,6,184\r\n5,2,127~5,4,127\r\n6,2,201~6,3,201\r\n8,1,7~8,4,7\r\n4,2,46~6,2,46\r\n3,2,5~3,2,6\r\n5,4,261~6,4,261\r\n0,3,46~0,6,46\r\n3,1,57~3,2,57\r\n5,9,205~5,9,206\r\n1,1,39~1,4,39\r\n1,0,242~1,1,242\r\n8,1,16~8,1,19\r\n6,1,188~6,1,190\r\n2,4,92~4,4,92\r\n6,6,51~7,6,51\r\n4,2,48~4,4,48\r\n5,3,219~7,3,219\r\n8,9,182~8,9,182\r\n1,1,40~2,1,40\r\n9,3,91~9,4,91\r\n4,0,104~4,3,104\r\n5,2,10~7,2,10\r\n2,1,275~2,3,275\r\n5,3,99~5,6,99\r\n0,4,85~0,5,85\r\n5,9,36~7,9,36\r\n4,0,279~4,1,279\r\n1,0,10~3,0,10\r\n2,1,207~3,1,207\r\n4,3,234~4,6,234\r\n2,0,71~5,0,71\r\n8,6,78~8,7,78\r\n4,9,102~4,9,105\r\n2,6,73~4,6,73\r\n3,6,162~6,6,162\r\n6,1,199~6,4,199\r\n4,7,226~4,8,226\r\n8,0,217~8,2,217\r\n4,5,265~4,8,265\r\n6,2,110~8,2,110\r\n2,5,179~2,7,179\r\n6,8,173~8,8,173\r\n3,0,36~5,0,36\r\n7,5,271~7,7,271\r\n6,6,114~6,9,114\r\n1,0,67~3,0,67\r\n1,0,86~1,3,86\r\n5,0,140~5,2,140\r\n5,0,265~5,2,265\r\n5,2,87~5,3,87\r\n6,7,250~6,9,250\r\n4,4,37~4,4,38\r\n8,7,227~8,8,227\r\n2,1,210~2,3,210\r\n8,1,220~8,1,222\r\n1,9,228~3,9,228\r\n5,7,16~5,8,16\r\n0,0,8~0,1,8\r\n0,3,200~3,3,200\r\n8,3,89~9,3,89\r\n3,8,37~3,8,39\r\n1,4,136~1,5,136\r\n5,1,277~5,3,277\r\n6,4,246~6,5,246\r\n5,9,15~8,9,15\r\n8,5,261~8,7,261\r\n8,2,127~8,3,127\r\n2,1,3~2,4,3\r\n8,2,144~8,4,144\r\n7,4,53~9,4,53\r\n3,3,138~6,3,138\r\n6,9,63~8,9,63\r\n3,6,204~5,6,204\r\n3,5,179~3,6,179";
            //InputData = "1,0,1~1,2,1\r\n0,0,2~2,0,2\r\n0,2,3~2,2,3\r\n0,0,4~0,2,4\r\n2,0,5~2,2,5\r\n0,1,6~2,1,6\r\n1,1,8~1,1,9";   // Exemple donné pour debug
            #endregion

            InitInputData(InputData);

            this._bricks = new Bricks(Lines);

            if (this.Debug)
                DebugInit();
        }
        #endregion

        #region Initialisation
        /// <summary>
        /// Initialisation des données de travail pour une ligne.
        /// </summary>
        /// <param name="ligne">Données de la ligne d'entrée</param>
        private void InitialisationLigne(string ligne)
        {
            var Split = ligne.Split(' ').ToList();
        }
        #endregion

        #region Méthodes publiques
        public override long Partie1()
        {
            return ProcessPart1();
        }

        public override long Partie2()
        {
            return ProcessPart2();
        }
        #endregion

        #region Process
        private long ProcessPart1()
        {
            return _bricks.GetNumberWhoCanBeDisintegrated();
        }
        private long ProcessPart2()
        {
            return _bricks.Sum(b=>b.GetNbFall());
        }
        #endregion

        #region Debug
        private void DebugInit()
        {
        }
        #endregion

        #region Classes de travail
        private class Bricks : List<Brick>
        {
            public void FaireTomber()
            {
                var ListeTriee = this.OrderBy(b => b.Zd).ToList();
                foreach(var b in ListeTriee)
                {
                    int delta = this.GetZDessous(b) - b.Zd + 1;
                    b.Za += delta;
                    b.Zd += delta;

                }
                this.ForEach(b => { b.Distinct(); b.SetGrapheSupp(); });
            }
            private int GetZDessous(Brick brick)
            {
                int Dessous = 0;
                var bricks = this.Where(b => b.EstDessous(brick)).ToList();
                if(bricks.Count() > 0)
                {
                    Dessous = bricks.Max(b => b.Za);
                    bricks.Where(b=>b.Za == Dessous).ToList().ForEach(b=> {
                        b.Soutient.Add(brick);
                        brick.EstSoutenuPar.Add(b);
                    });
                }
                return Dessous;
            }


            public Bricks(List<string> inputData)
            {
                int Id = 0;
                foreach(var s in inputData)
                {
                    var Split = s.Split("~").ToArray();
                    var coordsA = Split[0].Split(",").Select(int.Parse).ToArray();
                    var coordsB = Split[1].Split(",").Select(int.Parse).ToArray();
                    this.Add(new Brick(coordsA[0], coordsA[1], coordsA[2], coordsB[0], coordsB[1], coordsB[2], ++Id));
                }
                FaireTomber();
            }

            public long GetNumberWhoCanBeDisintegrated()
            {
                long nb = 0;
                nb += this.Count(b => b.CanBeDisintegrated());
                return nb;
            }
            
        }
        private class Brick
        {
            public int Id { get; private set; }
            public int Xd { get; private set; }
            public int Yd { get; private set; }
            public int Zd { get; set; }
            public int Xa { get; private set; }
            public int Ya { get; private set; }
            public int Za { get; set; }
            private List<Brick>? GrapheSup { get; set; } = null;
            public long? NumberFalling { get; set; } = null;
            public List<Brick> Soutient { get; private set; } = new List<Brick>();
            public List<Brick> EstSoutenuPar { get; private set; } = new List<Brick>();
            public Brick(int xd, int yd, int zd, int xa, int ya, int za, int id)
            {
                Xd = Math.Min(xd, xa);
                Yd = Math.Min(yd, ya);
                Zd = Math.Min(zd, za);
                Xa = Math.Max(xa, xd);
                Ya = Math.Max(ya, yd);
                Za = Math.Max(za, zd);
                Id = id;
            }

            public long GetNbFall()
            {
                long nb = 0;
                if(GrapheSup != null)
                {
                    List<Brick> bricks = GrapheSup.ToList();
                    bricks.Add(this);
                    while (GrapheSup.RemoveAll(b => b.EstSoutenuPar.Exists(bsp => !bricks.Contains(bsp))) > 0) { bricks = GrapheSup.ToList(); bricks.Add(this); }
                    nb += GrapheSup.Count;
                }
                return nb;
            }

            public void Distinct()
            {
                Soutient = Soutient.Distinct().ToList();
                EstSoutenuPar = EstSoutenuPar.Distinct().ToList();
            }
            public bool CanBeDisintegrated()
            {
                if (this.Soutient.Count == 0)
                    return true;
                foreach(var b in this.Soutient)
                {
                    if (b.EstSoutenuPar.Count == 1)
                        return false;
                }
                return true;
            }

            public List<Brick> SetGrapheSupp()
            {
                if(this.GrapheSup == null)
                {
                    this.GrapheSup = this.Soutient.ToList();
                    foreach (var b in this.Soutient)
                    {
                        this.GrapheSup.AddRange(b.SetGrapheSupp());
                    }
                    this.GrapheSup = this.GrapheSup.Distinct().ToList();
                }
                return this.GrapheSup;
            }

            public override string ToString()
            {
                return "(" + $"{Xd}-{Xa},{Yd}-{Ya},{Zd}-{Za}" + ") " + (this.CanBeDisintegrated() ? "#" : "_") + "      "
                            + string.Join(", ", this.EstSoutenuPar.Select(b => b.Id)) 
                            + " <- " + this.Id 
                            + " -> " + string.Join(", ", this.Soutient.Select(b => b.Id));

            }

            public bool EstDessous(Brick brick)
            {
                if(this.Za < brick.Zd)
                {
                    if(this.Xa >= brick.Xd && this.Xd <= brick.Xa)
                    {
                        if(this.Ya >= brick.Yd && this.Yd <= brick.Ya)
                        {
                            return true;
                        }
                    }
                }
                return false;
            }
        }
        #endregion
    }
}
