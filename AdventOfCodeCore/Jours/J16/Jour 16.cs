
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;

namespace AdventOfCodeCore.Jours
{
    public class Jour_16 : Jour_abs
    {
        #region Enumerables
        private enum Direction
        {
            Haut,
            Bas,
            Gauche,
            Droite
        }
        #endregion

        #region Helpers
        private static Dictionary<char, Dictionary<Direction, List<Direction>>> IndexDirections { get; set; } = new Dictionary<char, Dictionary<Direction, List<Direction>>>()
        {
            { '-', new Dictionary<Direction, List<Direction>>()
                {
                    { Direction.Bas, new List<Direction>() { Direction.Gauche, Direction.Droite} },
                    { Direction.Haut, new List<Direction>() {Direction.Gauche, Direction.Droite} },
                    { Direction.Droite, new List<Direction>() {Direction.Droite} },
                    { Direction.Gauche, new List<Direction>() {Direction.Gauche} }
                }
            },
            { '|', new Dictionary<Direction, List<Direction>>()
                {
                    { Direction.Bas, new List<Direction>() { Direction.Bas} },
                    { Direction.Haut, new List<Direction>() {Direction.Haut} },
                    { Direction.Droite, new List<Direction>() {Direction.Haut, Direction.Bas} },
                    { Direction.Gauche, new List<Direction>() { Direction.Haut, Direction.Bas } }
                }
            },
            { '.', new Dictionary<Direction, List<Direction>>()
                {
                    { Direction.Bas, new List<Direction>() { Direction.Bas} },
                    { Direction.Haut, new List<Direction>() {Direction.Haut} },
                    { Direction.Droite, new List<Direction>() {Direction.Droite} },
                    { Direction.Gauche, new List<Direction>() {Direction.Gauche} }
                }
            },
            { '/', new Dictionary<Direction, List<Direction>>()
                {
                    { Direction.Bas, new List<Direction>() { Direction.Gauche} },
                    { Direction.Haut, new List<Direction>() {Direction.Droite} },
                    { Direction.Droite, new List<Direction>() {Direction.Haut} },
                    { Direction.Gauche, new List<Direction>() {Direction.Bas} }
                }
            },
            { '\\', new Dictionary<Direction, List<Direction>>()
                {
                    { Direction.Bas, new List<Direction>() { Direction.Droite} },
                    { Direction.Haut, new List<Direction>() {Direction.Gauche} },
                    { Direction.Droite, new List<Direction>() {Direction.Bas} },
                    { Direction.Gauche, new List<Direction>() {Direction.Haut} }
                }
            }
        };
        private static Dictionary<Direction, Tuple<int, int>> OperationCoordonnees { get; set; } = new Dictionary<Direction, Tuple<int, int>>()
        {
            {Direction.Haut, new Tuple<int, int>(0, -1) },
            {Direction.Bas, new Tuple<int, int>(0, 1) },
            {Direction.Gauche, new Tuple<int, int>(-1, 0) },
            {Direction.Droite, new Tuple<int, int>(1, 0) }
        };
        private static Dictionary<Direction, Direction> InvertDirections { get; set; } = new Dictionary<Direction, Direction>()
        { 
            {Direction.Haut, Direction.Bas},
            {Direction.Bas, Direction.Haut},
            {Direction.Droite, Direction.Gauche},
            {Direction.Gauche, Direction.Droite}

        };
        #endregion

        #region Propriétés
        private Layout TileMap { get; set; } = new Layout();
        #endregion

        #region Constructeur
        public Jour_16(bool debug = false):base(debug)
        {
            #region Input Data
            string InputData = "\\.........../../..\\.\\.\\................|..-...\\........./.......-.....................-...\\...--....../..\\....\r\n........|............|............-.........|....\\.................\\-.........../...../....-../....\\..........\r\n.-....................\\\\..................|.\\..........\\.........../.............................-...-........\r\n............-.....\\/...........-........-......................-..-...../...............|................/....\r\n.......\\....-...-...............|.............-...................../....-../............./\\..........-..\\....\r\n..................-.............\\.........\\........-......./..../..|....|......-/............\\.............\\..\r\n-...............|.........\\........../.\\........../......./-..........-...-.....-............................|\r\n.\\\\...\\..........-............./...-|...................../.......-.................-....../.........|........\r\n..................../........................./..\\...................\\.................-/......./.............\r\n../...................|...../.-..................-.....|....-.|....................../.../\\....-....|..\\..|.\\.\r\n..................|..................................-....|.........\\................................./.......\r\n.........-...........-........\\..|-...................--.............-.../......./....................\\..-....\r\n-..........-.................\\.....|......|.\\................|../..........\\.........\\.|.............-....\\...\r\n......./....-....|....-..........|........-...-....-.....-............................................/../....\r\n.......\\...........|.......\\....\\.//\\.............\\...../|....-...../..|....-................/................\r\n.........\\........./............\\.-.|......./..........................|....\\........-.-.............../..|-.|\r\n.............................\\......|....-../.....\\.....-..../.........................\\......|....../...\\/...\r\n.../.\\.........../................................./.\\.\\...............\\..............\\.....|........-........\r\n..................\\......-......|..................\\................................/.../.|...................\r\n...\\\\............................\\./................../............................-.......-..|...............\r\n/.............\\...-....\\...//..-..\\....-......-.\\............../.....|../.........|..../........\\......\\......\r\n./..........-.........\\..-.................-.|...........\\.......-.......|...................|../.............\r\n.....-./.\\..../.|.............../...........|..../....\\...\\/..-.........|....-.........|......................\r\n...../.|.............../.....................\\\\../...|........\\........./|-...........\\/./.\\\\.................\r\n..............\\...-..............\\.|......./........-...............-.-...|..\\......-./..........-.......|../.\r\n.....|...............\\....|............../................./....../...-........-.....|........\\.........||../|\r\n.../................................../...............-......................................../.......-......\r\n......../.........|..../...............|...../..|................./............|.../.....|....|..\\........-...\r\n.../................................//-.......\\........./......../....-.....-....-............................\r\n........../....................|................................./.-......|.....\\........-..............|..|..\r\n........|...-............|.\\.../.......................\\...\\../...........|../\\.\\-..../|\\..|-...\\......\\....-.\r\n...-.\\..../.....||.....\\./.-.....\\..............-.......\\.../...-....|......\\...........-.....-....../........\r\n...|-...|..........\\.........../.......................-....../...............\\.......\\.....|.................\r\n....\\..../\\\\..........-........\\............................/...........|.........|......|.|...........|...|..\r\n.............\\............................../....|..\\.\\..../....................\\..|...|..-............\\....-.\r\n.-/|./...\\....-\\....-...\\...............-.../............-..../.--............................|||.............\r\n....../../\\\\...|..-.................\\.............../.|\\/............................../.........\\.....|......\r\n..../....................\\..................../......\\............-//.........................................\r\n.............\\..../........../........-..............................|...-/....../..|....|.......-......../...\r\n................-.|..\\../...|.\\..|..-.....-..../...................\\..............\\........................./.\r\n........................../......\\...............................-..../......................-...........-....\r\n........\\.-......................./...............\\..............................\\...../...................\\..\r\n..............................\\..|..............|\\.-..-....-..|..../.........\\.............../.-..............\r\n..........................\\\\./|.........\\|\\..............\\......./.......-.-...................\\.......-......\r\n.............|.........-..\\..................|......-..|.-|.................--..||............-.|.............\r\n..............\\..\\.\\.\\.........-./....../\\../|../.......................\\-.....\\....|.........................\r\n.............................|.........\\.....|..............................|.......././-.../.........-./....|\r\n\\.....................\\.../..................................-......./........../..\\.\\.................|......\r\n...............-......................../.....................................................................\r\n..../........./........-.....|................/../....\\.........../../.././........./......................-..\r\n.......\\................/............................................\\........../..\\.\\......|/|\\..............\r\n...........\\.............................\\\\......\\\\..|..-\\................../.-.....................-.........\r\n........|../..\\...............|......./.................................|......|./....../......-..............\r\n........./................\\.............|...............-.........-.....\\.............../.\\..........|........\r\n.........................|......./....................-......|........\\.........................|/............\r\n.\\..-.......................................-....|.................................|\\./.\\.....................\r\n\\../................................-.-.....-..................../....../......../\\...|..|......../.......\\...\r\n........................../..............\\|............./..../.................../...\\....\\/..................\r\n../-.........................\\...\\......\\......................|.......\\..\\...\\...\\.................-..|....\\.\r\n....-...................\\......-........../......../...............|................................/.........\r\n.................................../......|.......|......................................|..\\........-........\r\n......|..|....-..................\\./.............../.|...............|.|/.......\\.\\...........................\r\n...............|...........|.....\\................................................|................\\.....|....\r\n......../...|......../.................../../...........|...|............./.............\\..|.../........-.....\r\n.....................-............\\...|..........|...-..........|..-..../...-...../......|....................\r\n...\\.......\\.....-..................................|/.....\\......|.....................|.......|......./.-...\r\n.....................|........./...............|.-...........\\........|......|...-/............../.-..........\r\n......./....../.......-....-..............\\../\\.......\\................................................|......\r\n................../.......\\\\.......................|...\\........|...\\........-....\\..-..........\\...../..-....\r\n...............................................-.........................\\................\\............../..\\.\r\n....|......../.........\\.........-../....-....................\\..................|............................\r\n................./.-../\\..........-.....|.........\\.........\\..../.............................|........--/...\r\n................|./...............|.......\\....-\\........-.....................-.....|..................../-..\r\n...........\\........................|../...-./......\\...............\\........-./......|.................|..\\..\r\n.......|-....../...........|..........|............/.............../.|....../...................\\.............\r\n...../...../..........|.......................|....................|.........\\|............................\\..\r\n........-........\\......./....\\.............//................................./......./...................|..\r\n..-......../...................-...../.........-...................|..........................\\....../.-......\r\n./............................\\...............................|............|...../.|................|.........\r\n......\\................|.............................-.........\\.................................../-........\\\r\n./-/..........|.................................../........\\....\\.....\\.....................\\.\\.........|.....\r\n.-............../../........./.........-......\\.....................\\..\\..\\..\\/......-./.../....|.............\r\n.....|..................-...\\||.......\\./../........................-.........................-..........\\....\r\n...-................/.|........-....................................|..\\....-...\\......-..|............/......\r\n..........\\...............|.|...-.............-.././...................../.../................................\r\n.......\\./............./........../..\\............\\............-\\......|......|....|.........../|.............\r\n............\\....|...........|...............-........\\..|\\..-.....-...|....................\\..../.......-....\r\n........\\.....\\...................|......./......-........./....\\-...................|................\\....-..\r\n../......................../................-...|..........\\........../...................................|.\\.\r\n.....................-..../......../........./........./.........\\.......|/-...........|.........\\...../...../\r\n......//..................\\.|....|..|..\\...\\-........./...........\\............/..................|...-.....\\.\r\n.....-..-....../..................\\....\\........................|......................../....|........\\..|.\\.\r\n.........-............\\..............\\..\\.\\../............................\\..-...-................./-.........\r\n....|./..........\\..-.................\\..\\...../.\\...................-................/............|...../....\r\n...\\.................../.....-...../.-.././....-/......|..................|................/.............-....\r\n.....\\.||.................\\................\\..|.....|.............\\.\\-.............-................./........\r\n.......\\..........\\....................|................/..............|.../..................\\...-.-.||......\r\n.....-./..\\.\\.........................................|......./.............../....|..|.......-........\\...\\..\r\n.....|............./.....-...................|.\\..../-............\\.........................-................\\\r\n........\\/............./......\\......|-...|................../.....|-......................./..............\\-.\r\n..............-..../.....-..........||.-.....-.../................././.../............\\/................./../.\r\n-.....................................|.........-.....|...................|..................../.../..........\r\n.......................-..|................/...........\\...........................|.--.....\\..........|/..-..\r\n...............\\..................../..../.|..........................|.....................|..\\...\\....--....\r\n....../.......-...............................|....../.........\\.-........../.....................\\.--...-....\r\n.-......\\............/...-........|.....\\........../|........................|..........\\...|....../-.........\r\n/............................../.....................................\\........../|........-...............\\..-\r\n.........\\........\\.|.|\\..\\.....-..............-.........-...........|........|...|...........-.............||\r\n.-\\................\\.......|...................................../..................-.-.....|...\\..\\.|........\r\n\\............-/../.......|............./......\\\\.\\./.|......-/.\\.\\.............\\........./|\\.....-............";
            //InputData = "";   // Exemple donné pour debug
            #endregion

            InitInputData(InputData);

            for (int i = 0; i < Lines.Count; i++)
            {
                InitialisationLigne(Lines[i], i);
            }

            TileMap.Init();

            if (this.Debug)
                DebugInit();
        }
        #endregion

        #region Initialisation
        /// <summary>
        /// Initialisation des données de travail pour une ligne.
        /// </summary>
        /// <param name="ligne">Données de la ligne d'entrée</param>
        private void InitialisationLigne(string ligne, int NumeroLigne)
        {
            for(int i = 0; i < ligne.Length; i++)
            {
                this.TileMap.Add(new Tile(i, NumeroLigne, ligne[i]));
            }
        }

        #endregion

        #region Méthodes publiques
        public override long Partie1()
        {
            return ProcessPart1();
        }

        public override long Partie2()
        {
            return ProcessPart2();
        }
        #endregion

        #region Process
        private long ProcessPart1()
        {
            TileMap.Enlight(0, 0, Direction.Droite);
            return TileMap.GetNumberEnlighted;
        }
        private long ProcessPart2()
        {
            long maxNb = 0;
            for(int i = 0; i < Lines.Count; i++)
            {
                TileMap.Enlight(0, i, Direction.Droite);
                maxNb = Math.Max(TileMap.GetNumberEnlighted, maxNb);
                TileMap.Enlight(Lines[0].Length - 1, i, Direction.Gauche);
                maxNb = Math.Max(TileMap.GetNumberEnlighted, maxNb);
            }
            for(int i = 0; i < Lines[0].Length; i++)
            {
                TileMap.Enlight(i, 0, Direction.Bas);
                maxNb = Math.Max(TileMap.GetNumberEnlighted, maxNb);
                TileMap.Enlight(i, Lines.Count - 1, Direction.Haut);
                maxNb = Math.Max(TileMap.GetNumberEnlighted, maxNb);
            }
            return maxNb;
        }
        #endregion

        #region Debug
        private void DebugInit()
        {
        }
        #endregion

        #region Classes de travail
        private class Tile
        {
            public int X { get; private set; }
            public int Y { get; private set; }
            public char Char { get; private set; }
            public bool isEnlighted { get; private set; } = false;

            public Dictionary<Direction, List<Tuple<Direction, Tile>>> Reflects { get; private set; } = new Dictionary<Direction, List<Tuple<Direction, Tile>>>();
            private Dictionary <Direction, bool> hasBeenEnlighted { get; set; } = new Dictionary<Direction, bool>();

            public Tile (int X, int Y, char Char)
            {
                this.X = X;
                this.Y = Y;
                this.Char = Char;
            }
            public void Enlight(Direction dir)
            {
                if(this.hasBeenEnlighted.TryGetValue(dir, out bool inused))
                {
                    return;
                }
                this.isEnlighted = true;
                this.hasBeenEnlighted.Add(dir, true);
                foreach(var reflect in this.Reflects[dir])
                {
                    Direction opposite = Jour_16.InvertDirections[reflect.Item1];
                    if(!this.hasBeenEnlighted.TryGetValue(opposite, out inused))
                        this.hasBeenEnlighted.Add(Jour_16.InvertDirections[reflect.Item1], true);
                    reflect.Item2.Enlight(reflect.Item1);
                }
            }
            public void Clear()
            {
                this.hasBeenEnlighted.Clear();
                this.isEnlighted = false;
            }
        }

        private class Layout : List<Tile>
        {
            public long GetNumberEnlighted
            {
                get
                {
                    return this.Count(t => t.isEnlighted);
                }
            }
            public void Enlight(int X, int Y, Direction direction)
            {
                this.ForEach(t => t.Clear());
                GetTile(X, Y)?.Enlight(direction);
            }

            public void Init()
            {
                foreach(Tile tile in this)
                {
                    var parametres = Jour_16.IndexDirections[tile.Char];
                    foreach(var param in parametres)
                    {
                        List<Tuple<Direction, Tile>> liste = new List<Tuple<Direction, Tile>>();
                        foreach(var direction in param.Value)
                        {
                            var operation = Jour_16.OperationCoordonnees[direction];
                            var t = this.GetTile(tile.X + operation.Item1, tile.Y + operation.Item2);
                            if(t != null)
                            {
                                liste.Add(new Tuple<Direction, Tile>(direction, t));
                            }
                        }
                        tile.Reflects.Add(param.Key, liste);
                    }
                }
            }
            private Tile GetTile(int X, int Y)
            {
                return this.FirstOrDefault(t=>t.X == X && t.Y == Y);
            }
        }
        #endregion
    }
}
